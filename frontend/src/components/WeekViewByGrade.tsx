// –ó–∞–≥—Ä—É–∂–∞–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ draftId
// –°—Ç—Ä–æ–∏—Ç —Ç–∞–±–ª–∏—Ü—É —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å—Ç–æ–ª–±—Ü–∞–º–∏ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ (–ü–Ω‚Äì–°–±)
// –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç —É—Ä–æ–∫–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º (üè´ 5–ê, üè´ 6–ë, ...)
// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏ –≤ —è—á–µ–π–∫–∞—Ö
import axios from 'axios';
import { Table, Tag, Spin, message } from 'antd';

interface Lesson {
  subject: string;
  grade: string;
  day_of_week: number;
  start_time: string;
  duration_minutes: number;
  type?: string;
}

const weekdayLabels = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];

const WeekViewByGrade: React.FC<{ draftId: number }> = ({ draftId }) => {
  const [lessons, setLessons] = useState<Lesson[]>([]);
  const [grades, setGrades] = useState<string[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    async function fetchDraftLessons() {
      try {
        const res = await axios.get(`/api/draft/template-drafts/${draftId}/`);
        const allLessons = res.data.data.lessons;

        const parsed: Lesson[] = allLessons.map((l: any) => ({
          subject: l.subject_name || `–ü—Ä–µ–¥–º–µ—Ç ${l.subject}`,
          grade: l.grade_name || `–ö–ª–∞—Å—Å ${l.grade}`,
          day_of_week: l.day_of_week,
          start_time: l.start_time,
          duration_minutes: l.duration_minutes,
          type: l.type || 'lesson',
        }));

        const uniqueGrades = [...new Set(parsed.map(l => l.grade))];
        setGrades(uniqueGrades);
        setLessons(parsed);
      } catch (e) {
        message.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫.');
      } finally {
        setLoading(false);
      }
    }
    fetchDraftLessons();
  }, [draftId]);

  if (loading) return <Spin />;

  return (
    <div className="p-4">
      <h2 className="text-lg font-semibold mb-2">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∫–ª–∞—Å—Å–∞–º</h2>
      {grades.map(grade => (
        <div key={grade} className="mb-6">
          <h3 className="text-md font-bold mb-1">üè´ {grade}</h3>
          <div className="grid grid-cols-6 gap-4 text-sm">
            {weekdayLabels.map((day, dayIndex) => {
              const lessonsOfDay = lessons
                .filter(l => l.grade === grade && l.day_of_week === dayIndex)
                .sort((a, b) => a.start_time.localeCompare(b.start_time));

              return (
                <div key={dayIndex}>
                  <div className="font-semibold mb-1">{day}</div>
                  {lessonsOfDay.length > 0 ? (
                    lessonsOfDay.map((l, i) => (
                      <div key={i} className="mb-1 border px-2 py-1 rounded bg-blue-50">
                        ‚è∞ {l.start_time} <br />
                        {l.type === 'course' ? 'üìó' : 'üìò'} {l.subject}
                      </div>
                    ))
                  ) : (
                    <div className="text-gray-400">‚Äî</div>
                  )}
                </div>
              );
            })}
          </div>
        </div>
      ))}
    </div>
  );
};

export default WeekViewByGrade;
